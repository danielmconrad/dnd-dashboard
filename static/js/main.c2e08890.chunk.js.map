{"version":3,"sources":["components/Header/index.scss","components/Dashboard/index.scss","components/Home/index.scss","components/NotFound/index.scss","components/Character/index.scss","components/Footer/index.scss","components/Credits/index.scss","components/Header/index.jsx","components/Footer/index.jsx","components/Home/index.jsx","components/Credits/index.jsx","api/index.js","components/Character/index.jsx","components/Character/fromBeyond.js","components/Dashboard/index.jsx","components/NotFound/index.jsx","serviceWorker.js","index.js","components/App/index.jsx"],"names":["module","exports","component","a","progress","progressMeter","dashboardLink","code","character","inspiration","imageContainer","imageWrapper","imageSizer","image","nameAndStats","name","stat","speed","armorClass","healthy","bloodied","critical","statVal","stats","topNotes","conditions","bottomNotes","scroller","components_Header","props","react_default","createElement","className","concat","styles","Link","to","components_Footer","DASHBOARDS","Imagination Station","Tomb of Annihilation","Home","Object","keys","map","key","join","Component","components_Credits","href","target","rel","baseAPI","Axios","create","baseURL","process","timeout","headers","Content-type","api","characterConfig","get","then","resp","data","id","characters","ids","Promise","all","fixtures","brine","dextuin","enrique","niamh","ollie","rando","components_Character","Character_Image","Character_Name","Character_Stats","Character_Conditions","Character_Notes","Image","viewBox","xmlns","src","avatarUrl","alt","Name","Stats","hitPoints","status","temp","current","max","Conditions","length","Notes","notes","otherNotes","STAT","ID","BONUS","armor","inventory","filter","i","equipped","definition","reduce","acc","cur","statModifier","config","cond","find","configCondition","levelConstitutions","level","overrideHitPoints","baseHitPoints","bonusHitPoints","removedHitPoints","temporaryHitPoints","hitPointStatus","hitPointPercentage","Math","floor","classes","walkingModifier","modifiers","race","mod","subType","value","weightSpeeds","normal","walk","statValue","s","modifier","type","statBonus","Dashboard","state","characterIDs","characterIdx","countCurrent","didError","isLoadingCharacters","isLoadingConfig","isMissingIDs","params","refreshInterval","this","match","split","setState","_this2","loadCharacters","restartCountdown","stopCoundown","_this3","countDown","setInterval","tick","clearInterval","_this4","getCurrentCharacter","getNextCharacterIdx","_this5","resolve","c","transformCharacter","catch","_this6","setCharacter","_this7","char","portraitAvatarUrl","fromBeyond","_this8","style","width","countdownPercentage","components_NotFound","Boolean","window","location","hostname","ReactDOM","render","HashRouter","Switch","Route","path","exact","Credits","NotFound","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2e08890.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"_1HAA-iOgltAE0Jl_nRBDRw\",\"a\":\"_2dWUFhzFW5LEVpTumnxBJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"_3PE5gzHxKpVJZD14V5tFCp\",\"progressMeter\":\"_1pwlrNBVh1f5Fm8NS8oK8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"WdoqTV_ohdVTxKL-zHQ6v\",\"dashboardLink\":\"_1cTAJmPsbDH-zdmlTUNy2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"_3GLJSKRwkdQ8x8CqxdKQSK\",\"code\":\"_1pXrK8McUAD7OoGEDgraES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character\":\"_1x6PQW0Wi6eu3aY2Jaxfzm\",\"inspiration\":\"_8zAtDJlFTr0Y1fJDArbFr\",\"imageContainer\":\"_30OLbk61SwJvJm-Rd1uqWT\",\"imageWrapper\":\"zhGyctSqUbpOoGfeAjkVk\",\"imageSizer\":\"_2tQqzWOCrlyRaPWSZ1UFjL\",\"image\":\"jA8HnrB1aHY1eIsX-yI4W\",\"nameAndStats\":\"_1WIyrBZGrlYmB5swd55p5L\",\"name\":\"_8BFW4pGniCx69JCm22GVX\",\"stat\":\"_1ls-lJaUxW_NBDM3zVX-Mi\",\"speed\":\"_3102d71RoBuaEjy73Fuh5A\",\"armorClass\":\"_3xl3_uF-sXTmq1BTHqYoNc\",\"healthy\":\"_1xYiXmqNLvkwoh4GcB2fpE\",\"bloodied\":\"_3yXFWzchEVTdyEBOWkEbJD\",\"critical\":\"_3WnCch1PeH9-EBFHd3CYsV\",\"statVal\":\"_3ZJl_rgo3Penf_bUJ8YPQy\",\"stats\":\"_22bw_NsmXURcl_R1uwULCE\",\"topNotes\":\"_2EI0R0zlBUJXft2fpxcJlT\",\"conditions\":\"_3MB4uY9UILoygBWEP8MlIZ\",\"bottomNotes\":\"PQaXBlkiLk4zN3ElSUg5Y\",\"scroller\":\"_2fxl1ysNXTS7eoqfQ7uIx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"IitYWWjHHvS087a4ywJfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"_1HhrGa5AIkshE9zj2av1NQ\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.component} ${props.className}`}>\n    <Link className={styles.a} to=\"/\">Home</Link>\n    <Link className={styles.a} to=\"/credits\">Credits</Link>\n  </div>\n);\n","import React from 'react';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.component} ${props.className}`}>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './index.scss';\n\nconst DASHBOARDS = {\n  'Imagination Station': [\n    9912582, 7893290, 7555852, 7901953\n  ],\n  'Tomb of Annihilation': [\n    9912582, 7893290, 7555852, 7893290, 7555852, 9912582\n  ],\n};\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className={`${styles.component}`}>\n        {Object.keys(DASHBOARDS).map(key => (\n          <p key={key}>\n            <Link\n              className={`button radius ${styles.dashboardLink}`}\n              to={`/dashboard/${DASHBOARDS[key].join(',')}`}\n            >\n              {key}\n            </Link>\n          </p>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport styles from './index.scss';\n\nexport default () => (\n  <div className={styles.component}>\n    <p>Favicon made by <a href=\"https://www.flaticon.com/authors/freepik\" target=\"_blank\" rel=\"noopener noreferrer\">freepik</a> from www.flaticon.com </p>\n    <p>Data supplied by <a href=\"https://www.dndbeyond.com\" target=\"_blank\" rel=\"noopener noreferrer\">D&amp;D Beyond</a></p>\n  </div>\n);\n","import Axios from 'axios';\n\nimport brine from '../fixtures/brine.json';\nimport dextuin from '../fixtures/dextuin.json';\nimport enrique from '../fixtures/enrique.json';\nimport niamh from '../fixtures/niamh.json';\nimport ollie from '../fixtures/ollie.json';\nimport rando from '../fixtures/rando.json';\n\nimport characterConfig from '../fixtures/config.json';\n\nconst IS_DEV = process.env.NODE_ENV === 'development';\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst baseAPI = Axios.create({\n  baseURL: API_URL,\n  timeout: 30000,\n  headers: { 'Content-type': 'application/json; charset=utf-8' },\n});\n\nconst api = {\n  characterConfig: () => IS_DEV\n    ? resolveAFter(characterConfig, 2000)\n    : baseAPI.get('/api/config/json').then(resp => resp.data),\n\n  character: id => IS_DEV\n    ? resolveAFter(api.fixtures.find(char => char.id === parseInt(id)), 3000)\n    : baseAPI.get(`/character/${id}/json`).then(resp => resp.data),\n\n  characters: ids => Promise.all(ids.map(id => api.character(id))),\n\n  fixtures: [\n    brine,\n    dextuin,\n    enrique,\n    niamh,\n    ollie,\n    rando,\n  ]\n};\n\nconst resolveAFter = (value, waitTime) =>\n  new Promise(resolve => setTimeout(() => resolve(value), waitTime));\n\nexport default api;\n","import React from 'react';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.character} ${props.className} grid-y`}>\n    <div className=\"cell grid-x\">\n      <div className={`${styles.imageContainer} cell small-3 xlarge-4`}>\n        <Image character={props.character} />\n      </div>\n      <div className={`${styles.nameAndStats} cell auto grid-y`}>\n        <Name className=\"cell small-4\" character={props.character} />\n        <Stats className=\"cell small-4\" character={props.character} />\n        <Conditions className=\"cell small-4\" character={props.character} />\n        <Notes className={`${styles.topNotes} cell small-4`} character={props.character} />\n      </div>\n    </div>\n    <Notes className={`${styles.bottomNotes} cell auto`} character={props.character} />\n    {props.character.inspiration && (\n      <i className={`${styles.inspiration} fas fa-sun`} />\n    )}\n  </div>\n);\n\nconst Image = props => (\n  <div className={`${styles.imageWrapper} ${props.className}`}>\n    <svg\n      className={styles.imageSizer}\n      viewBox=\"0 0 100 100\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    />\n    <img\n      className={styles.image}\n      src={props.character.avatarUrl}\n      alt={props.character.name}\n    />\n  </div>\n);\n\nconst Name = props => (\n  <div className={`${styles.name} ${props.className}`}>\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={`https://www.dndbeyond.com/characters/${props.character.id}`}\n    >\n      {props.character.name}\n    </a>\n  </div>\n);\n\nconst Stats = props => (\n  <div className={`${styles.stats} ${props.className}`}>\n    <span className={`${styles.stat} ${styles.speed}`}>\n      <i className=\"fas fa-walking\" />\n      <span className={styles.statVal}>\n        {props.character.speed}\n      </span>\n    </span>\n    <span className={`${styles.stat} ${styles.armorClass}`}>\n      <i className=\"fas fa-shield-alt\" />\n      <span className={styles.statVal}>\n        {props.character.armorClass}\n      </span>\n    </span>\n    <span className={`${styles.stat} ${styles[props.character.hitPoints.status]}`}>\n      <i className=\"fas fa-heartbeat\" />\n      {props.character.hitPoints.temp\n        ? (\n          <span className={styles.statVal}>\n            [{props.character.hitPoints.temp}]\n          </span>\n        )\n        : (\n          <span className={styles.statVal}>\n            {props.character.hitPoints.current} / {props.character.hitPoints.max}\n          </span>\n        )\n      }\n    </span>\n  </div>\n);\n\nconst Conditions = props => (\n  props.character.conditions.length\n    ? <div className={`${styles.conditions} ${props.className}`}>\n        <div className={styles.scroller}>\n          <i className=\"fas fa-exclamation-triangle\" />\n          <span className={styles.statVal}>\n            {props.character.conditions.join(', ')}\n          </span>\n        </div>\n      </div>\n    : null\n);\n\nconst Notes = props => (\n  <div className={`${props.className}`}>\n    <div className={styles.scroller}>\n      {props.character.notes.otherNotes || 'No notes.'}\n    </div>\n  </div>\n);\n","const STAT = {\n  STR: { ID: 1, BONUS: 'strength-score' },\n  DEX: { ID: 2, BONUS: 'dexterity-score' },\n  CON: { ID: 3, BONUS: 'constitution-score' },\n  INT: { ID: 4, BONUS: 'intelligence-score' },\n  WIS: { ID: 5, BONUS: 'wisdom-score' },\n  CHA: { ID: 6, BONUS: 'charisma-score' },\n};\n\nconst armorClass = (character) => {\n  const defaultArmor = 10;\n\n  const armor = character.inventory\n    .filter(i => i.equipped && !!i.definition.armorClass)\n    .map(i => i.definition.armorClass)\n    .reduce((acc, cur) => acc + cur, 0);\n\n  const dexMod = statModifier(character, STAT.DEX);\n\n  return dexMod + (armor || defaultArmor);\n};\n\nconst conditions = (config, character) => character.conditions.map(cond =>\n  config.conditions.find(\n    configCondition => configCondition.definition.id === cond.id\n  ).definition.name\n);\n\nconst hitPoints = (character) => {\n  const levelConstitutions = statModifier(character, STAT.CON) * level(character);\n\n  const max = character.overrideHitPoints\n    ? character.overrideHitPoints\n    : character.baseHitPoints + character.bonusHitPoints + levelConstitutions;\n\n  const current = max - character.removedHitPoints;\n  const temp = character.temporaryHitPoints ? character.temporaryHitPoints : null;\n  const hitPointPercentage = temp ? 1 : current / max;\n  const status = hitPointStatus(hitPointPercentage);\n\n  return {current, max, temp, status};\n}\n\nconst hitPointStatus = (hitPointPercentage) => {\n  switch (Math.floor(hitPointPercentage * 10)) {\n    case 0:\n    case 1:\n    case 2:\n      return 'critical';\n    case 3:\n    case 4:\n    case 5:\n      return 'bloodied';\n    default:\n      return 'healthy';\n  }\n}\n\nconst level = (character) => character.classes[0].level;\n\nconst speed = (character) => {\n  const walkingModifier = character.modifiers.race\n    .find(mod => mod.subType === 'innate-speed-walking');\n\n  return walkingModifier\n    ? walkingModifier.value\n    : character.race.weightSpeeds.normal.walk;\n};\n\nconst statBonus = (character, stat) =>\n  character.modifiers.race.filter(modifier =>\n    modifier.type === 'bonus' && modifier.subType === stat.BONUS\n  ).reduce((acc, cur) => acc + cur.value, 0);\n\nconst statModifier = (character, stat) =>\n  Math.floor((statValue(character, stat) - 10) / 2);\n\nconst statValue = (character, stat) =>\n  character.stats.find(s => s.id === stat.ID).value\n  + statBonus(character, stat);\n\nexport default function fromBeyond(config, character) {\n  return {\n    id: character.id,\n    armorClass: armorClass(character),\n    avatarUrl: character.avatarUrl || character.race.portraitAvatarUrl,\n    conditions: conditions(config, character),\n    hitPoints: hitPoints(character),\n    inspiration: character.inspiration,\n    name: character.name,\n    notes: character.notes,\n    speed: speed(character),\n  };\n};\n","import React, { Component } from 'react';\n\nimport api from '../../api';\nimport Character from '../Character';\nimport fromBeyond from '../Character/fromBeyond';\nimport styles from './index.scss';\n\nconst ONE_SECOND = 1000;\nconst REFRESH_INTERVAL = 15;\n\nclass Dashboard extends Component {\n  state = {\n    characterConfig: null,\n    characterIDs: [],\n    characterIdx: 0,\n    characters: [],\n    countCurrent: null,\n    didError: false,\n    isLoadingCharacters: false,\n    isLoadingConfig: false,\n    isMissingIDs: false,\n    params: {},\n    refreshInterval: 15,\n  }\n\n  componentWillMount() {\n    const characterIDs = (this.props.match.params.characterIDs || '').split(',');\n\n    return this.setState({\n      characterIDs: characterIDs,\n      isMissingIDs: !characterIDs.length,\n    });\n  }\n\n  componentDidMount() {\n    this.loadCharacters().then(() => this.restartCountdown());\n  }\n\n  componentWillUnmount() {\n    this.stopCoundown();\n  }\n\n  restartCountdown() {\n    this.setState({ countCurrent: REFRESH_INTERVAL });\n    this.countDown = setInterval(() => this.tick(), ONE_SECOND);\n  }\n\n  stopCoundown() {\n    clearInterval(this.countDown);\n  }\n\n  tick() {\n    if (this.state.countCurrent === 1) {\n      this.stopCoundown();\n\n      return this.getCurrentCharacter()\n        .then(() => this.setState({characterIdx: this.getNextCharacterIdx() }))\n        .then(() => this.restartCountdown());\n    }\n\n    return this.setState({ countCurrent: this.state.countCurrent - 1 });\n  }\n\n  getNextCharacterIdx() {\n    if (this.state.characterIdx === this.state.characterIDs.length - 1) {\n      return 0;\n    }\n    return this.state.characterIdx + 1;\n  }\n\n  loadCharacters() {\n    return this.state.characterIDs &&\n      Promise.resolve(this.setState({ isLoadingConfig: true }))\n      .then(() => api.characterConfig())\n      .then(characterConfig => this.setState({ characterConfig, isLoadingConfig: false, isLoadingCharacters: true }))\n      .then(() => api.characters(this.state.characterIDs))\n      .then(characters => characters.map(c => this.transformCharacter(c)))\n      .then(characters => this.setState({ characters, isLoadingCharacters: false }))\n      .catch(() => this.setState({ didError: true, isLoadingCharacters: false }))\n  }\n\n  getCurrentCharacter() {\n    return api.character(this.state.characterIDs[this.state.characterIdx])\n      .then(character => this.setCharacter(character));\n  }\n\n  setCharacter(character) {\n    return this.setState({\n      characters: this.state.characters.map(char => char.id === character.id\n        ? this.transformCharacter(character)\n        : char\n      )\n    });\n  }\n\n  transformCharacter(character) {\n    return fromBeyond(this.state.characterConfig, character);\n  }\n\n  countdownPercentage(characterIdx) {\n    if (characterIdx !== this.state.characterIdx) return 0;\n    return 100 - ((this.state.countCurrent - 1) / this.state.refreshInterval) * 100;\n  }\n\n  render() {\n    if (this.state.isMissingIDs) return (\n      <p className=\"text-center\">Missing Character IDs.</p>\n    );\n\n    if (this.state.isLoadingConfig) return (\n      <p className=\"text-center\">Loading Configuration...</p>\n    );\n\n    if (this.state.isLoadingCharacters) return (\n      <p className=\"text-center\">Loading Characters...</p>\n    );\n\n    if (this.state.didError) return (\n      <p className=\"text-center\">Something went wrong.</p>\n    );\n\n    return (\n      <div className={`${styles.component} grid-container full`}>\n        <div className=\"grid-x grid-margin-y grid-margin-x\">\n          {this.state.characters.map((character, i) => (\n            <div key={character.id} className=\"cell small-12 medium-6 xlarge-4\">\n              <Character character={character} className=\"\" />\n              <div className={styles.progress}>\n                <div\n                  className={styles.progressMeter}\n                  style={{width: `${this.countdownPercentage(i)}%` }}\n                />\n              </div>\n            </div>\n          ))}\n\n          {!this.state.characterIDs && (\n            <div>No characters selected!</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport styles from './index.scss';\n\nexport default () => (\n  <div className={styles.component}>\n    <h1 className={styles.code}>404</h1>\n    <p>What are you looking for?</p>\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport Home from '../Home';\nimport Credits from '../Credits';\nimport Dashboard from '../Dashboard';\nimport NotFound from '../NotFound';\n\nimport './index.scss';\n\nexport default () => (\n  <HashRouter>\n    <div id=\"app\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/credits\" component={Credits} />\n        <Route path=\"/dashboard/:characterIDs\" component={Dashboard} />\n        <Route component={NotFound} />\n      </Switch>\n      <Footer />\n    </div>\n  </HashRouter>\n);\n"],"sourceRoot":""}