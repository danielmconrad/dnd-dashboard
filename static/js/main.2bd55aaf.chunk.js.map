{"version":3,"sources":["components/Home/index.scss","components/Character/index.scss","components/Header/index.scss","components/Footer/index.scss","components/Header/index.jsx","components/Footer/index.jsx","components/Home/index.jsx","components/Credits/index.jsx","api/index.js","components/Character/index.jsx","components/Character/fromBeyond.js","components/Dashboard/index.jsx","serviceWorker.js","index.js","components/App/index.jsx"],"names":["module","exports","component","dashboardLink","character","imageContainer","nameAndStats","name","stat","speed","ac","healthy","bloodied","critical","statVal","topNotes","conditions","bottomNotes","scroller","components_Header","props","react_default","a","createElement","className","concat","styles","Link","to","components_Footer","DASHBOARDS","Imagation Station","Tomb of Annihilation","Home","Object","keys","map","key","join","Component","components_Credits","href","baseAPI","Axios","create","baseURL","process","timeout","headers","Content-type","api","characterConfig","get","then","resp","data","id","characters","ids","Promise","all","fixtures","dextuin","rando","niamh","components_Character","Character_Image","Character_Name","Character_Stats","Character_Conditions","Character_Notes","Image","viewBox","xmlns","xlinkHref","avatarUrl","width","x","y","Name","Stats","stats","health","hitPoints","status","temp","current","max","Conditions","length","Notes","notes","otherNotes","STAT_ID","config","cond","find","configCondition","definition","levelConstitutions","valueToModifier","filter","s","value","constitutionModifier","level","overrideHitPoints","baseHitPoints","bonusHitPoints","removedHitPoints","temporaryHitPoints","hitPointStatus","hitPointPercentage","Math","floor","classes","v","fromBeyond","_ref","race","portraitAvatarUrl","Dashboard","state","refreshIdx","params","this","refreshNext","bind","setState","characterIDs","match","split","_this2","getCharacters","_this3","c","transformCharacter","_this4","incrementIndex","newIndex","Boolean","window","location","hostname","ReactDOM","render","HashRouter","Route","exact","path","Credits","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,UAAA,wBAAAC,cAAA,ow/mDCAlBH,EAAAC,QAAA,CAAkBG,UAAA,0BAAAC,eAAA,0BAAAC,aAAA,0BAAAC,KAAA,yBAAAC,KAAA,0BAAAC,MAAA,0BAAAC,GAAA,0BAAAC,QAAA,0BAAAC,SAAA,0BAAAC,SAAA,0BAAAC,QAAA,0BAAAC,SAAA,0BAAAC,WAAA,0BAAAC,YAAA,wBAAAC,SAAA,+CCAlBlB,EAAAC,QAAA,CAAkBC,UAAA,+CCAlBF,EAAAC,QAAA,CAAkBC,UAAA,4s1LCGHiB,EAAA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOxB,UAAZ,KAAAuB,OAAyBL,EAAMI,YAC3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,YAAT,gCCROC,EAAA,SAAAT,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOxB,UAAZ,KAAAuB,OAAyBL,EAAMI,oECAzCM,EAAa,CACjBC,oBAAqB,CACnB,QAAS,QAAS,QAAS,QAAS,QAAS,SAE/CC,uBAAwB,CACtB,QAAS,QAAS,QAAS,QAAS,QAAS,UAuBlCC,mLAjBX,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOxB,YACvBgC,OAAOC,KAAKL,GAAYM,IAAI,SAAAC,GAAG,OAC9BhB,EAAAC,EAAAC,cAAA,KAAGc,IAAKA,GACNhB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEH,UAAS,iBAAAC,OAAmBC,IAAOvB,eACnCyB,GAAE,cAAAH,OAAgBK,EAAWO,GAAKC,KAAK,OAEtCD,cAVIE,aCVJC,SAAA,kBACbnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAAA,KAAGkB,KAAK,4CAAR,WAArB,2BACApB,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,KAAGkB,KAAK,6BAAR,2DCIpBC,SAAUC,IAAMC,OAAO,CAC3BC,QAHcC,0CAIdC,QAAS,IACTC,QAAS,CAAEC,eAAgB,sCAGvBC,EAAM,CACVC,gBAAiB,kBAEbT,EAAQU,IAAI,oBAAoBC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,QAEtDnD,UAAW,SAAAoD,GAAE,OAETd,EAAQU,IAAR,cAAA3B,OAA0B+B,EAA1B,UAAqCH,KAAK,SAAAC,GAAI,OAAIA,EAAKC,QAE3DE,WAAY,SAAAC,GAAG,OAEXC,QAAQC,IAAIF,EAAItB,IAAI,SAAAoB,GAAE,OAAIN,EAAI9C,UAAUoD,OAE5CK,SAAU,CACRC,EACAC,EACAC,EACAD,EACAC,EACAF,IAIWZ,oBCpCAe,EAAA,SAAA7C,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOtB,UAAZ,KAAAqB,OAAyBL,EAAMI,UAA/B,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAC2C,EAAD,CAAO9D,UAAWgB,EAAMhB,aAE1BiB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOpB,aAAZ,sBACZe,EAAAC,EAAAC,cAAC4C,EAAD,CAAM3C,UAAU,eAAepB,UAAWgB,EAAMhB,YAChDiB,EAAAC,EAAAC,cAAC6C,EAAD,CAAO5C,UAAU,eAAepB,UAAWgB,EAAMhB,YACjDiB,EAAAC,EAAAC,cAAC8C,EAAD,CAAY7C,UAAU,eAAepB,UAAWgB,EAAMhB,YACtDiB,EAAAC,EAAAC,cAAC+C,EAAD,CAAO9C,UAAS,gBAAAC,OAAkBC,IAAOX,UAAYX,UAAWgB,EAAMhB,cAG1EiB,EAAAC,EAAAC,cAAC+C,EAAD,CAAO9C,UAAS,GAAAC,OAAKC,IAAOT,YAAZ,cAAqCb,UAAWgB,EAAMhB,cAIpEmE,EAAQ,SAAAnD,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OACEC,UAAS,GAAAC,OAAKC,IAAOrB,eAAZ,KAAAoB,OAA8BL,EAAMI,WAC7CgD,QAAQ,cACRC,MAAM,8BAENpD,EAAAC,EAAAC,cAAA,SACEmD,UAAWtD,EAAMhB,UAAUuE,UAC3BC,MAAM,OACNC,EAAE,IACFC,EAAE,QAKFC,EAAO,SAAA3D,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOnB,KAAZ,KAAAkB,OAAoBL,EAAMI,YACrCJ,EAAMhB,UAAUG,OAIfyE,EAAQ,SAAA5D,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOuD,MAAZ,KAAAxD,OAAqBL,EAAMI,YACvCH,EAAAC,EAAAC,cAAA,QAAMC,UAAS,GAAAC,OAAKC,IAAOlB,KAAZ,KAAAiB,OAAoBC,IAAOjB,QACxCY,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAWE,IAAOZ,SAAxB,OAEFO,EAAAC,EAAAC,cAAA,QAAMC,UAAS,GAAAC,OAAKC,IAAOlB,KAAZ,KAAAiB,OAAoBC,IAAOhB,KACxCW,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAWE,IAAOZ,SAAxB,OAEFO,EAAAC,EAAAC,cAAA,QAAMC,UAAS,GAAAC,OAAKC,IAAOlB,KAAZ,KAAAiB,OAAoBC,IAAOwD,OAA3B,KAAAzD,OAAqCC,IAAON,EAAMhB,UAAU+E,UAAUC,UACnF/D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACZJ,EAAMhB,UAAU+E,UAAUE,KAEvBhE,EAAAC,EAAAC,cAAA,QAAMC,UAAWE,IAAOZ,SAAxB,IACIM,EAAMhB,UAAU+E,UAAUE,KAD9B,KAKAhE,EAAAC,EAAAC,cAAA,QAAMC,UAAWE,IAAOZ,SACrBM,EAAMhB,UAAU+E,UAAUG,QAD7B,MACyClE,EAAMhB,UAAU+E,UAAUI,QAQvEC,EAAa,SAAApE,GAAK,OACtBA,EAAMhB,UAAUY,WAAWyE,OACvBpE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOV,WAAZ,KAAAS,OAA0BL,EAAMI,YAC5CH,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAOR,UACrBG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAWE,IAAOZ,SACrBM,EAAMhB,UAAUY,WAAWsB,KAAK,SAIvC,MAGAoD,EAAQ,SAAAtE,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKL,EAAMI,YACvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAOR,UACpBE,EAAMhB,UAAUuF,MAAMC,YAAc,eCpFrCC,EACC,EAGD7E,EAAa,SAAC8E,EAAQ1F,GAAT,OAAuBA,EAAUY,WAAWoB,IAAI,SAAA2D,GAAI,OACrED,EAAO9E,WAAWgF,KAChB,SAAAC,GAAe,OAAIA,EAAgBC,WAAW1C,KAAOuC,EAAKvC,KAC1D0C,WAAW3F,QAOT4E,EAAY,SAAC/E,GACjB,IAAM+F,EALqB,SAAC/F,GAAD,OAAegG,EAC1ChG,EAAU6E,MAAMoB,OAAO,SAAAC,GAAC,OAAIA,EAAE9C,KAAOqC,IAAa,GAAGU,OAI1BC,CAAqBpG,GAAaqG,EAAMrG,GAE7DmF,EAAMnF,EAAUsG,kBAClBtG,EAAUsG,kBACVtG,EAAUuG,cAAgBvG,EAAUwG,eAAiBT,EAEnDb,EAAUC,EAAMnF,EAAUyG,iBAC1BxB,EAAOjF,EAAU0G,mBAAqB1G,EAAU0G,mBAAqB,KAI3E,MAAO,CAACxB,UAASC,MAAKF,OAAMD,OAFb2B,EADY1B,EAAO,EAAIC,EAAUC,KAM5CwB,EAAiB,SAACC,GACtB,OAAQC,KAAKC,MAA2B,GAArBF,IACjB,KAAK,EACL,KAAK,EACL,KAAK,EACH,MAAO,WACT,KAAK,EACL,KAAK,EACL,KAAK,EACH,MAAO,WACT,QACE,MAAO,YAIPP,EAAQ,SAACrG,GAAD,OAAeA,EAAU+G,QAAQ,GAAGV,OAE5CL,EAAkB,SAACgB,GAAD,OAAOH,KAAKC,OAAOE,EAAI,IAAM,IAEtC,SAASC,EAAWvB,EAApBwB,GAA2C,IAAblH,EAAakH,EAAblH,UAC3C,MAAO,CACLoD,GAAIpD,EAAUoD,GACdmB,UAAWvE,EAAUuE,WAAavE,EAAUmH,KAAKC,kBACjDxG,WAAYA,EAAW8E,EAAQ1F,GAC/B+E,UAAWA,EAAU/E,GACrBG,KAAMH,EAAUG,KAChBoF,MAAOvF,EAAUuF,4BC6BN8B,6MA3EbC,MAAQ,CACNvE,gBAAiB,KACjBM,WAAY,GACZkE,WAAY,EACZC,OAAQ,wFAIRC,KAAKC,YAAcD,KAAKC,YAAYC,KAAKF,MAEzCA,KAAKG,SAAS,CACZC,cAAeJ,KAAKzG,MAAM8G,MAAMN,OAAOK,cAAgB,IAAIE,MAAM,mDAIjD,IAAAC,EAAAP,KACbA,KAAKH,MAAMO,cAEhB/E,EAAIC,kBACDE,KAAK,SAAAF,GAAe,OAAIiF,EAAKJ,SAAS,CAAE7E,sBACxCE,KAAK,kBAAM+E,EAAKC,0GAOL,IAAAC,EAAAT,KACd3E,EAAIO,WAAWoE,KAAKH,MAAMO,cACvB5E,KAAK,SAAAI,GAAU,OAAIA,EAAWrB,IAAI,SAAAmG,GAAC,OAAID,EAAKE,mBAAmBD,OAC/DlF,KAAK,SAAAI,GAAU,OAAI6E,EAAKN,SAAS,CAAEvE,4DAKrBrD,GACjB,OAAOiH,EAAWQ,KAAKH,MAAMvE,gBAAiB/C,yCAGlC,IAAAqI,EAAAZ,KACLpE,EAAcoE,KAAKH,MAAnBjE,WAEPP,EAAI9C,UAAUyH,KAAKH,MAAMO,aAAaJ,KAAKH,MAAMC,aAC9CtE,KAAK,SAAAjD,GAAS,OAAIqD,EAAWgF,EAAKf,MAAMC,YAAcN,EAAWjH,KACjEiD,KAAK,kBAAMoF,EAAKT,SAAS,CAAEvE,iBAC3BJ,KAAK,kBAAMoF,EAAKC,4DAInB,IAAIC,EAAWd,KAAKH,MAAMC,WAAa,EAEvCE,KAAKG,SAAS,CACZL,WAAYgB,GAAYd,KAAKH,MAAMjE,WAAWgC,OAAS,EAAIkD,qCAK7D,OACEtH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOxB,UAAZ,yBACZmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACZqG,KAAKH,MAAMjE,WAAWrB,IAAI,SAAAhC,GAAS,OAClCiB,EAAAC,EAAAC,cAAA,OAAKc,IAAKjC,EAAUoD,GAAIhC,UAAU,mCAChCH,EAAAC,EAAAC,cAAC0C,EAAD,CAAW7D,UAAWA,EAAWoB,UAAU,SAI7CqG,KAAKH,MAAMO,cACX5G,EAAAC,EAAAC,cAAA,+CApEYgB,mBCGJqG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2DCbNc,IAASC,OAAO5H,EAAAC,EAAAC,cCMD,kBACbF,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACE7H,EAAAC,EAAAC,cAAA,OAAKiC,GAAG,OACNnC,EAAAC,EAAAC,cAACJ,EAAD,MACAE,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAInJ,UAAW+B,IACjCZ,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAK,WAAWnJ,UAAWoJ,IAClCjI,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAK,2BAA2BnJ,UAAWuH,IAClDpG,EAAAC,EAAAC,cAACM,EAAD,SDbU,MAAS0H,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtG,KAAK,SAAAuG,GACjCA,EAAaC","file":"static/js/main.2bd55aaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"WdoqTV_ohdVTxKL-zHQ6v\",\"dashboardLink\":\"_1cTAJmPsbDH-zdmlTUNy2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character\":\"_1x6PQW0Wi6eu3aY2Jaxfzm\",\"imageContainer\":\"_30OLbk61SwJvJm-Rd1uqWT\",\"nameAndStats\":\"_1WIyrBZGrlYmB5swd55p5L\",\"name\":\"_8BFW4pGniCx69JCm22GVX\",\"stat\":\"_1ls-lJaUxW_NBDM3zVX-Mi\",\"speed\":\"_3102d71RoBuaEjy73Fuh5A\",\"ac\":\"_2WvMXekZffmPT1gz_QqF90\",\"healthy\":\"_1xYiXmqNLvkwoh4GcB2fpE\",\"bloodied\":\"_3yXFWzchEVTdyEBOWkEbJD\",\"critical\":\"_3WnCch1PeH9-EBFHd3CYsV\",\"statVal\":\"_3ZJl_rgo3Penf_bUJ8YPQy\",\"topNotes\":\"_2EI0R0zlBUJXft2fpxcJlT\",\"conditions\":\"_3MB4uY9UILoygBWEP8MlIZ\",\"bottomNotes\":\"PQaXBlkiLk4zN3ElSUg5Y\",\"scroller\":\"_2fxl1ysNXTS7eoqfQ7uIx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"_1HAA-iOgltAE0Jl_nRBDRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"IitYWWjHHvS087a4ywJfS\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.component} ${props.className}`}>\n    <div className=\"grid-x\">\n      <div className=\"cell small-6\">\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div className=\"cell small-6 text-right\">\n        <Link to=\"/credits\">Credits</Link>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.component} ${props.className}`}>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './index.scss';\n\nconst DASHBOARDS = {\n  'Imagation Station': [\n    9912582, 7893290, 7555852, 7893290, 7555852, 9912582\n  ],\n  'Tomb of Annihilation': [\n    9912582, 7893290, 7555852, 7893290, 7555852, 9912582\n  ],\n};\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className={`${styles.component}`}>\n        {Object.keys(DASHBOARDS).map(key => (\n          <p key={key}>\n            <Link\n              className={`button radius ${styles.dashboardLink}`}\n              to={`/dashboard/${DASHBOARDS[key].join(',')}`}\n            >\n              {key}\n            </Link>\n          </p>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './index.scss';\n\nexport default () => (\n  <div className=\"Credits\">\n    <div>Favicon made by <a href=\"https://www.flaticon.com/authors/freepik\">freepik</a> from www.flaticon.com </div>\n    <div>Data supplied by <a href=\"https://www.dndbeyond.com\">D&amp;D Beyond</a></div>\n  </div>\n);\n","import Axios from 'axios';\n\nimport dextuin from '../fixtures/dextuin.json';\nimport rando from '../fixtures/rando.json';\nimport niamh from '../fixtures/niamh.json';\nimport characterConfig from '../fixtures/config.json';\n\nconst IS_DEV = process.env.NODE_ENV === 'development';\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst baseAPI = Axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: { 'Content-type': 'application/json; charset=utf-8' },\n});\n\nconst api = {\n  characterConfig: () => IS_DEV\n    ? Promise.resolve(characterConfig)\n    : baseAPI.get('/api/config/json').then(resp => resp.data),\n\n  character: id => IS_DEV\n    ? Promise.resolve(api.fixtures.find(_id => _id === id))\n    : baseAPI.get(`/character/${id}/json`).then(resp => resp.data),\n\n  characters: ids => IS_DEV\n    ? Promise.resolve(api.fixtures)\n    : Promise.all(ids.map(id => api.character(id))),\n\n  fixtures: [\n    dextuin,\n    rando,\n    niamh,\n    rando,\n    niamh,\n    dextuin\n  ]\n};\n\nexport default api;\n","import React from 'react';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.character} ${props.className} grid-y`}>\n    <div className=\"cell grid-x\">\n      <div className=\"cell small-3 xlarge-4 \">\n        <Image character={props.character} />\n      </div>\n      <div className={`${styles.nameAndStats} cell auto grid-y`}>\n        <Name className=\"cell small-4\" character={props.character} />\n        <Stats className=\"cell small-4\" character={props.character} />\n        <Conditions className=\"cell small-4\" character={props.character} />\n        <Notes className={`cell small-4 ${styles.topNotes}`} character={props.character} />\n      </div>\n    </div>\n    <Notes className={`${styles.bottomNotes} cell auto`} character={props.character} />\n  </div>\n);\n\nconst Image = props => (\n  <svg\n    className={`${styles.imageContainer} ${props.className}`}\n    viewBox=\"0 0 100 100\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <image\n      xlinkHref={props.character.avatarUrl}\n      width=\"100%\"\n      x=\"0\"\n      y=\"0\"\n    />\n  </svg>\n);\n\nconst Name = props => (\n  <div className={`${styles.name} ${props.className}`}>\n    {props.character.name}\n  </div>\n);\n\nconst Stats = props => (\n  <div className={`${styles.stats} ${props.className}`}>\n    <span className={`${styles.stat} ${styles.speed}`}>\n      <i className=\"fas fa-walking\"></i>\n      <span className={styles.statVal}>35</span>\n    </span>\n    <span className={`${styles.stat} ${styles.ac}`}>\n      <i className=\"fas fa-shield-alt\"></i>\n      <span className={styles.statVal}>18</span>\n    </span>\n    <span className={`${styles.stat} ${styles.health} ${styles[props.character.hitPoints.status]}`}>\n      <i className=\"fas fa-heartbeat\"></i>\n      {props.character.hitPoints.temp\n        ? (\n          <span className={styles.statVal}>\n            [{props.character.hitPoints.temp}]\n          </span>\n        )\n        : (\n          <span className={styles.statVal}>\n            {props.character.hitPoints.current} / {props.character.hitPoints.max}\n          </span>\n        )\n      }\n    </span>\n  </div>\n);\n\nconst Conditions = props => (\n  props.character.conditions.length\n    ? <div className={`${styles.conditions} ${props.className}`}>\n        <div className={styles.scroller}>\n          <i className=\"fas fa-exclamation-triangle\"></i>\n          <span className={styles.statVal}>\n            {props.character.conditions.join(', ')}\n          </span>\n        </div>\n      </div>\n    : null\n);\n\nconst Notes = props => (\n  <div className={`${props.className}`}>\n    <div className={styles.scroller}>\n      {props.character.notes.otherNotes || 'No notes.'}\n    </div>\n  </div>\n);\n","\nconst STAT_ID = {\n  CON: 3,\n};\n\nconst conditions = (config, character) => character.conditions.map(cond =>\n  config.conditions.find(\n    configCondition => configCondition.definition.id === cond.id\n  ).definition.name\n);\n\nconst constitutionModifier = (character) => valueToModifier(\n  character.stats.filter(s => s.id === STAT_ID.CON)[0].value\n);\n\nconst hitPoints = (character) => {\n  const levelConstitutions = constitutionModifier(character) * level(character);\n\n  const max = character.overrideHitPoints\n    ? character.overrideHitPoints\n    : character.baseHitPoints + character.bonusHitPoints + levelConstitutions;\n\n  const current = max - character.removedHitPoints;\n  const temp = character.temporaryHitPoints ? character.temporaryHitPoints : null;\n  const hitPointPercentage = temp ? 1 : current / max;\n  const status = hitPointStatus(hitPointPercentage);\n\n  return {current, max, temp, status};\n}\n\nconst hitPointStatus = (hitPointPercentage) => {\n  switch (Math.floor(hitPointPercentage * 10)) {\n    case 0:\n    case 1:\n    case 2:\n      return 'critical';\n    case 3:\n    case 4:\n    case 5:\n      return 'bloodied';\n    default:\n      return 'healthy';\n  }\n}\n\nconst level = (character) => character.classes[0].level;\n\nconst valueToModifier = (v) => Math.floor((v - 10) / 2);\n\nexport default function fromBeyond(config, { character }) {\n  return {\n    id: character.id,\n    avatarUrl: character.avatarUrl || character.race.portraitAvatarUrl,\n    conditions: conditions(config, character),\n    hitPoints: hitPoints(character),\n    name: character.name,\n    notes: character.notes,\n  }\n};\n","import React, { Component } from 'react';\n\nimport api from '../../api';\nimport Character from '../Character';\nimport fromBeyond from '../Character/fromBeyond';\nimport styles from './index.scss';\n\n// const ONE_SECOND = 1000;\n\nclass Dashboard extends Component {\n  state = {\n    characterConfig: null,\n    characters: [],\n    refreshIdx: 0,\n    params: {},\n  }\n\n  componentWillMount() {\n    this.refreshNext = this.refreshNext.bind(this);\n\n    this.setState({\n      characterIDs: (this.props.match.params.characterIDs || '').split(',')\n    });\n  }\n\n  componentDidMount() {\n    if (!this.state.characterIDs) return;\n\n    api.characterConfig()\n      .then(characterConfig => this.setState({ characterConfig }))\n      .then(() => this.getCharacters());\n  }\n\n  componentWillUnmount() {\n    // !config.isDev && clearInterval(this.refreshNext);\n  }\n\n  getCharacters() {\n    api.characters(this.state.characterIDs)\n      .then(characters => characters.map(c => this.transformCharacter(c)))\n      .then(characters => this.setState({ characters }));\n\n    // !config.isDev && setInterval(this.refreshNext, 30 * ONE_SECOND);\n  }\n\n  transformCharacter(character) {\n    return fromBeyond(this.state.characterConfig, character);\n  }\n\n  refreshNext() {\n    const {characters} = this.state;\n\n    api.character(this.state.characterIDs[this.state.refreshIdx])\n      .then(character => characters[this.state.refreshIdx] = fromBeyond(character))\n      .then(() => this.setState({ characters }))\n      .then(() => this.incrementIndex());\n  }\n\n  incrementIndex() {\n    let newIndex = this.state.refreshIdx + 1;\n\n    this.setState({\n      refreshIdx: newIndex >= this.state.characters.length ? 0 : newIndex\n    });\n  }\n\n  render() {\n    return (\n      <div className={`${styles.component} grid-container full`}>\n        <div className=\"grid-x grid-margin-y grid-margin-x\">\n          {this.state.characters.map(character => (\n            <div key={character.id} className=\"cell small-12 medium-6 xlarge-4\">\n              <Character character={character} className=\"\" />\n            </div>\n          ))}\n\n          {!this.state.characterIDs && (\n            <div>No characters selected!</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport Home from '../Home';\nimport Credits from '../Credits';\nimport Dashboard from '../Dashboard';\n\nimport './index.scss';\n\nexport default () => (\n  <HashRouter>\n    <div id=\"app\">\n      <Header />\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/credits\" component={Credits} />\n      <Route path=\"/dashboard/:characterIDs\" component={Dashboard} />\n      <Footer />\n    </div>\n  </HashRouter>\n);\n"],"sourceRoot":""}