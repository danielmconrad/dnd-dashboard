{"version":3,"sources":["components/Dashboard/index.scss","components/Home/index.scss","components/Character/index.scss","components/Header/index.scss","components/Footer/index.scss","components/Header/index.jsx","components/Footer/index.jsx","components/Home/index.jsx","components/Credits/index.jsx","api/index.js","components/Character/index.jsx","components/Character/fromBeyond.js","components/Dashboard/index.jsx","serviceWorker.js","index.js","components/App/index.jsx"],"names":["module","exports","progress","progressMeter","component","dashboardLink","character","imageContainer","image","nameAndStats","name","stat","inspiration","speed","armorClass","healthy","bloodied","critical","statVal","topNotes","conditions","bottomNotes","scroller","components_Header","props","react_default","a","createElement","className","concat","styles","Link","to","components_Footer","DASHBOARDS","Imagation Station","Tomb of Annihilation","Home","Object","keys","map","key","join","Component","components_Credits","href","baseAPI","Axios","create","baseURL","process","timeout","headers","Content-type","api","characterConfig","get","then","resp","data","id","characters","ids","Promise","all","fixtures","dextuin","rando","niamh","enrique","brine","components_Character","Character_Image","Character_Name","Character_Stats","Character_Conditions","Character_Notes","Image","viewBox","xmlns","xlinkHref","avatarUrl","width","x","y","Name","Stats","stats","hitPoints","status","temp","current","max","Conditions","length","Notes","notes","otherNotes","STAT","ID","BONUS","armor","inventory","filter","i","equipped","definition","reduce","acc","cur","statModifier","config","cond","find","configCondition","levelConstitutions","level","overrideHitPoints","baseHitPoints","bonusHitPoints","removedHitPoints","temporaryHitPoints","hitPointStatus","hitPointPercentage","Math","floor","classes","walkingModifier","modifiers","race","mod","subType","value","weightSpeeds","normal","walk","statValue","s","modifier","type","statBonus","Dashboard","state","characterIDs","characterIdx","params","refreshInterval","this","countDown","bind","getCharacters","setState","countCurrent","match","split","_this2","setInterval","clearInterval","_this3","getCurrentCharacter","getNextCharacterIdx","_this4","c","transformCharacter","_this5","setCharacter","_this6","char","portraitAvatarUrl","fromBeyond","_this7","style","countdownPercentage","Boolean","window","location","hostname","ReactDOM","render","HashRouter","Route","exact","path","Credits","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f706413f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"_3PE5gzHxKpVJZD14V5tFCp\",\"progressMeter\":\"_1pwlrNBVh1f5Fm8NS8oK8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"WdoqTV_ohdVTxKL-zHQ6v\",\"dashboardLink\":\"_1cTAJmPsbDH-zdmlTUNy2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character\":\"_1x6PQW0Wi6eu3aY2Jaxfzm\",\"imageContainer\":\"_30OLbk61SwJvJm-Rd1uqWT\",\"image\":\"jA8HnrB1aHY1eIsX-yI4W\",\"nameAndStats\":\"_1WIyrBZGrlYmB5swd55p5L\",\"name\":\"_8BFW4pGniCx69JCm22GVX\",\"stat\":\"_1ls-lJaUxW_NBDM3zVX-Mi\",\"inspiration\":\"_8zAtDJlFTr0Y1fJDArbFr\",\"speed\":\"_3102d71RoBuaEjy73Fuh5A\",\"armorClass\":\"_3xl3_uF-sXTmq1BTHqYoNc\",\"healthy\":\"_1xYiXmqNLvkwoh4GcB2fpE\",\"bloodied\":\"_3yXFWzchEVTdyEBOWkEbJD\",\"critical\":\"_3WnCch1PeH9-EBFHd3CYsV\",\"statVal\":\"_3ZJl_rgo3Penf_bUJ8YPQy\",\"topNotes\":\"_2EI0R0zlBUJXft2fpxcJlT\",\"conditions\":\"_3MB4uY9UILoygBWEP8MlIZ\",\"bottomNotes\":\"PQaXBlkiLk4zN3ElSUg5Y\",\"scroller\":\"_2fxl1ysNXTS7eoqfQ7uIx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"_1HAA-iOgltAE0Jl_nRBDRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"IitYWWjHHvS087a4ywJfS\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.component} ${props.className}`}>\n    <div className=\"grid-x\">\n      <div className=\"cell small-6\">\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div className=\"cell small-6 text-right\">\n        <Link to=\"/credits\">Credits</Link>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.component} ${props.className}`}>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './index.scss';\n\nconst DASHBOARDS = {\n  'Imagation Station': [\n    9912582, 7893290, 7555852\n  ],\n  'Tomb of Annihilation': [\n    9912582, 7893290, 7555852, 7893290, 7555852, 9912582\n  ],\n};\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className={`${styles.component}`}>\n        {Object.keys(DASHBOARDS).map(key => (\n          <p key={key}>\n            <Link\n              className={`button radius ${styles.dashboardLink}`}\n              to={`/dashboard/${DASHBOARDS[key].join(',')}`}\n            >\n              {key}\n            </Link>\n          </p>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './index.scss';\n\nexport default () => (\n  <div className=\"Credits\">\n    <div>Favicon made by <a href=\"https://www.flaticon.com/authors/freepik\">freepik</a> from www.flaticon.com </div>\n    <div>Data supplied by <a href=\"https://www.dndbeyond.com\">D&amp;D Beyond</a></div>\n  </div>\n);\n","import Axios from 'axios';\n\nimport dextuin from '../fixtures/dextuin.json';\nimport rando from '../fixtures/rando.json';\nimport niamh from '../fixtures/niamh.json';\nimport enrique from '../fixtures/enrique.json';\nimport brine from '../fixtures/brine.json';\n\nimport characterConfig from '../fixtures/config.json';\n\nconst IS_DEV = process.env.NODE_ENV === 'development';\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst baseAPI = Axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: { 'Content-type': 'application/json; charset=utf-8' },\n});\n\nconst api = {\n  characterConfig: () => IS_DEV\n    ? Promise.resolve(characterConfig)\n    : baseAPI.get('/api/config/json').then(resp => resp.data),\n\n  character: id => IS_DEV\n    ? Promise.resolve(api.fixtures.find(char => char.id === parseInt(id)))\n    : baseAPI.get(`/character/${id}/json`).then(resp => resp.data),\n\n  characters: ids => IS_DEV\n    ? Promise.resolve(api.fixtures)\n    : Promise.all(ids.map(id => api.character(id))),\n\n  fixtures: [\n    dextuin,\n    rando,\n    niamh,\n    enrique,\n    brine,\n  ]\n};\n\nexport default api;\n","import React from 'react';\nimport styles from './index.scss';\n\nexport default props => (\n  <div className={`${styles.character} ${props.className} grid-y`}>\n    <div className=\"cell grid-x\">\n      <div className={`${styles.imageContainer} cell small-3 xlarge-4`}>\n        <Image character={props.character} />\n      </div>\n      <div className={`${styles.nameAndStats} cell auto grid-y`}>\n        <Name className=\"cell small-4\" character={props.character} />\n        <Stats className=\"cell small-4\" character={props.character} />\n        <Conditions className=\"cell small-4\" character={props.character} />\n        <Notes className={`cell small-4 ${styles.topNotes}`} character={props.character} />\n      </div>\n    </div>\n    <Notes className={`${styles.bottomNotes} cell auto`} character={props.character} />\n  </div>\n);\n\nconst Image = props => (\n  <svg\n    className={`${styles.image} ${props.className}`}\n    viewBox=\"0 0 100 100\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <image\n      xlinkHref={props.character.avatarUrl}\n      width=\"100%\" x=\"0\" y=\"0\"\n    />\n  </svg>\n);\n\nconst Name = props => (\n  <div className={`${styles.name} ${props.className}`}>\n    {props.character.name}\n  </div>\n);\n\nconst Stats = props => (\n  <div className={`${styles.stats} ${props.className}`}>\n    {props.character.inspiration && (\n      <span className={`${styles.stat} ${styles.inspiration}`}>\n        <i className=\"fas fa-sun\" />\n      </span>\n    )}\n    <span className={`${styles.stat} ${styles.speed}`}>\n      <i className=\"fas fa-walking\" />\n      <span className={styles.statVal}>\n        {props.character.speed}\n      </span>\n    </span>\n    <span className={`${styles.stat} ${styles.armorClass}`}>\n      <i className=\"fas fa-shield-alt\" />\n      <span className={styles.statVal}>\n        {props.character.armorClass}\n      </span>\n    </span>\n    <span className={`${styles.stat} ${styles[props.character.hitPoints.status]}`}>\n      <i className=\"fas fa-heartbeat\" />\n      {props.character.hitPoints.temp\n        ? (\n          <span className={styles.statVal}>\n            [{props.character.hitPoints.temp}]\n          </span>\n        )\n        : (\n          <span className={styles.statVal}>\n            {props.character.hitPoints.current} / {props.character.hitPoints.max}\n          </span>\n        )\n      }\n    </span>\n  </div>\n);\n\nconst Conditions = props => (\n  props.character.conditions.length\n    ? <div className={`${styles.conditions} ${props.className}`}>\n        <div className={styles.scroller}>\n          <i className=\"fas fa-exclamation-triangle\" />\n          <span className={styles.statVal}>\n            {props.character.conditions.join(', ')}\n          </span>\n        </div>\n      </div>\n    : null\n);\n\nconst Notes = props => (\n  <div className={`${props.className}`}>\n    <div className={styles.scroller}>\n      {props.character.notes.otherNotes || 'No notes.'}\n    </div>\n  </div>\n);\n","const STAT = {\n  STR: { ID: 1, BONUS: 'strength-score' },\n  DEX: { ID: 2, BONUS: 'dexterity-score' },\n  CON: { ID: 3, BONUS: 'constitution-score' },\n  INT: { ID: 4, BONUS: 'intelligence-score' },\n  WIS: { ID: 5, BONUS: 'wisdom-score' },\n  CHA: { ID: 6, BONUS: 'charisma-score' },\n};\n\nconst armorClass = (character) => {\n  const defaultArmor = 10;\n\n  const armor = character.inventory\n    .filter(i => i.equipped && !!i.definition.armorClass)\n    .map(i => i.definition.armorClass)\n    .reduce((acc, cur) => acc + cur, 0);\n\n  const dexMod = statModifier(character, STAT.DEX);\n\n  return dexMod + (armor || defaultArmor);\n};\n\nconst conditions = (config, character) => character.conditions.map(cond =>\n  config.conditions.find(\n    configCondition => configCondition.definition.id === cond.id\n  ).definition.name\n);\n\nconst hitPoints = (character) => {\n  const levelConstitutions = statModifier(character, STAT.CON) * level(character);\n\n  const max = character.overrideHitPoints\n    ? character.overrideHitPoints\n    : character.baseHitPoints + character.bonusHitPoints + levelConstitutions;\n\n  const current = max - character.removedHitPoints;\n  const temp = character.temporaryHitPoints ? character.temporaryHitPoints : null;\n  const hitPointPercentage = temp ? 1 : current / max;\n  const status = hitPointStatus(hitPointPercentage);\n\n  return {current, max, temp, status};\n}\n\nconst hitPointStatus = (hitPointPercentage) => {\n  switch (Math.floor(hitPointPercentage * 10)) {\n    case 0:\n    case 1:\n    case 2:\n      return 'critical';\n    case 3:\n    case 4:\n    case 5:\n      return 'bloodied';\n    default:\n      return 'healthy';\n  }\n}\n\nconst level = (character) => character.classes[0].level;\n\nconst speed = (character) => {\n  const walkingModifier = character.modifiers.race\n    .find(mod => mod.subType === 'innate-speed-walking');\n\n  return walkingModifier\n    ? walkingModifier.value\n    : character.race.weightSpeeds.normal.walk;\n};\n\nconst statBonus = (character, stat) =>\n  character.modifiers.race.filter(modifier =>\n    modifier.type === 'bonus' && modifier.subType === stat.BONUS\n  ).reduce((acc, cur) => acc + cur.value, 0);\n\nconst statModifier = (character, stat) =>\n  Math.floor((statValue(character, stat) - 10) / 2);\n\nconst statValue = (character, stat) =>\n  character.stats.find(s => s.id === stat.ID).value\n  + statBonus(character, stat);\n\nexport default function fromBeyond(config, character) {\n  return {\n    id: character.id,\n    armorClass: armorClass(character),\n    avatarUrl: character.avatarUrl || character.race.portraitAvatarUrl,\n    conditions: conditions(config, character),\n    hitPoints: hitPoints(character),\n    inspiration: character.inspiration,\n    name: character.name,\n    notes: character.notes,\n    speed: speed(character),\n  };\n};\n","import React, { Component } from 'react';\n\nimport api from '../../api';\nimport Character from '../Character';\nimport fromBeyond from '../Character/fromBeyond';\nimport styles from './index.scss';\n\nconst ONE_SECOND = 1000;\n\nclass Dashboard extends Component {\n  state = {\n    characterConfig: null,\n    characterIDs: [],\n    characterIdx: 0,\n    characters: [],\n    params: {},\n    refreshInterval: 15,\n  }\n\n  componentWillMount() {\n    this.countDown = this.countDown.bind(this);\n    this.getCharacters = this.getCharacters.bind(this);\n\n    return this.setState({\n      countCurrent: this.state.refreshInterval,\n      characterIDs: (this.props.match.params.characterIDs || '').split(',')\n    });\n  }\n\n  componentDidMount() {\n    if (!this.state.characterIDs) return;\n\n   return api.characterConfig()\n      .then(characterConfig => this.setState({ characterConfig }))\n      .then(() => this.getCharacters())\n      .then(() => setInterval(this.countDown, ONE_SECOND));\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.countDown);\n  }\n\n  countDown() {\n    if (this.state.countCurrent === 1) {\n      return this.getCurrentCharacter().then(() => this.setState({\n        characterIdx: this.getNextCharacterIdx(),\n        countCurrent: this.state.refreshInterval\n      }));\n    }\n\n    return this.setState({ countCurrent: this.state.countCurrent - 1 });\n  }\n\n  getNextCharacterIdx() {\n    if (this.state.characterIdx === this.state.characterIDs.length - 1) {\n      return 0;\n    }\n    return this.state.characterIdx + 1;\n  }\n\n  getCharacters() {\n    return api.characters(this.state.characterIDs)\n      .then(characters => characters.map(c => this.transformCharacter(c)))\n      .then(characters => this.setState({ characters }));\n  }\n\n  getCurrentCharacter() {\n    return api.character(this.state.characterIDs[this.state.characterIdx])\n      .then(character => this.setCharacter(character));\n  }\n\n  setCharacter(character) {\n    return this.setState({\n      characters: this.state.characters.map(char => char.id === character.id\n        ? this.transformCharacter(character)\n        : char\n      )\n    });\n  }\n\n  transformCharacter(character) {\n    return fromBeyond(this.state.characterConfig, character);\n  }\n\n  countdownPercentage(characterIdx) {\n    if (characterIdx !== this.state.characterIdx) return 100;\n    return 100 - ((this.state.countCurrent - 1) / this.state.refreshInterval) * 100;\n  }\n\n  render() {\n    return (\n      <div className={`${styles.component} grid-container full`}>\n        <div className=\"grid-x grid-margin-y grid-margin-x\">\n          {this.state.characters.map((character, i) => (\n            <div key={character.id} className=\"cell small-12 medium-6 xlarge-4\">\n              <Character character={character} className=\"\" />\n              <div className={styles.progress}>\n                <div\n                  className={styles.progressMeter}\n                  style={{width: `${this.countdownPercentage(i)}%` }}\n                />\n              </div>\n            </div>\n          ))}\n\n          {!this.state.characterIDs && (\n            <div>No characters selected!</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport Home from '../Home';\nimport Credits from '../Credits';\nimport Dashboard from '../Dashboard';\n\nimport './index.scss';\n\nexport default () => (\n  <HashRouter>\n    <div id=\"app\">\n      <Header />\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/credits\" component={Credits} />\n      <Route path=\"/dashboard/:characterIDs\" component={Dashboard} />\n      <Footer />\n    </div>\n  </HashRouter>\n);\n"],"sourceRoot":""}